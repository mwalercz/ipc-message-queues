// Generated by Bisonc++ V4.10.01 on Thu, 19 May 2016 00:43:22 +0200

#ifndef Parser_h_included
#define Parser_h_included

#include "Parserbase.h"
#include "Scanner.h"
#include "../Message.hpp"
#include "../Element.hpp"
#include "../Tuple.hpp"


#undef Parser

class Parser : public ParserBase {

public:
    Parser();
    Message* parse(std::string input, Time time, TimeDuration timeDuration, MsgPid msgPid);

    int parse__(std::string input);
    Message* result_;



private:
    Scanner d_scanner;

    Time time_;
    TimeDuration timeDuration_;
    MsgPid msgPid_;

    Elements tupleElements_;
    Query::QueryParts queryParts_;

    TypeCalculator typeCalculator_;

    void switchStreams(std::istream &in, std::ostream &out);

    int parse();

    void error(char const *msg);

    int lex();

    void print();

    void executeAction(int ruleNr);

    void errorRecovery();

    int lookup(bool recovery);

    void nextToken();

    void print__();

    void exceptionHandler__(std::exception const &exc);

    void prepareObjects();

    void prepareStreams(std::string input);

};


#endif
