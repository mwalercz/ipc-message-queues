// Generated by Bisonc++ V4.10.01 on Thu, 19 May 2016 00:43:22 +0200

#ifndef Parser_h_included
#define Parser_h_included
#include "Parserbase.h"
#include "Scanner.h"
#include "../Message.hpp"
#include "../Element.hpp"
#include "../Tuple.hpp"


#undef Parser

class Parser : public ParserBase {

public:
    std::unique_ptr<Message> parse(const std::string &input,
                                   Time sendTime,
                                   TimeDuration timeout,
                                   MsgPid msgPid);
private:
    Scanner d_scanner_;
    std::unique_ptr<Message> result_;
    Time sendTime_;
    TimeDuration timeout_;
    MsgPid msgPid_;
    Elements tupleElements_;
    Query::QueryParts queryParts_;
    TypeCalculator typeCalculator_;
    int queryPartIdx_;

    int parse();
    void error(char const *msg);
    int lex();
    void print();
    void executeAction(int ruleNr);
    void errorRecovery();
    int lookup(bool recovery);
    void nextToken();
    void print__();
    void exceptionHandler__(std::exception const &exc);
    void prepareObjects();
    void initVariables(Time sendTime, TimeDuration timeout, MsgPid msgPid);
    void switchInputStream(std::istream &in);
    int prepareAndParse(const std::string &input);

};


#endif
